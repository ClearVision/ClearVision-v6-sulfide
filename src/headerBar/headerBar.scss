@use "../../_classes" as *;
@use "../../backend/functions" as *;
@use "../../backend/mixins" as *;
@use "../../backend/variables" as *;

/* HEADER BAR */
#{c(main base)} {
  #{c(header header)} {
    height: 48px;
    background: rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.6));
    box-shadow: 0 0 10px rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.6));
    color: hsla(0, 0%, 100%, 0.5);
  }
  #{c(threads header)} {
    background: rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.6));
    box-shadow: 0 0 10px rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.6));
    color: hsla(0, 0%, 100%, 0.5);
  }
}
#{c(header header)} {
  #{c(header children)} {
    -webkit-mask: linear-gradient(to left, transparent, #000 20px);
    mask: linear-gradient(to left, transparent, #000 20px);
    &:after {
      display: none;
    }
    #{c(header icon)} {
      color: cv('colors.main');
      filter: drop-shadow(0 0 3px);
      width: 22px;
    }
  }
  #{c(header title)} {
    margin-left: 0;
    color: #fff;
    text-shadow: 0 0 3px #000;
    font-family: cv('font.main');
  }
  #{c(header topic)} {
    color: hsla(0, 0%, 100%, 0.5);
    a {
      color: cv('colors.main');
      @include hover-shadow;
    }
  }
  #{c(header akaBadge)} {
    background: hsla(0, 0%, 100%, 0.1);
    color: #fff;
  }
  #{c(other cv headerBarNicknames)} {
    color: hsla(0, 0%, 100%, 0.5);
  }
  #{c(header divider)} {
    background: hsla(0, 0%, 100%, 0.1);
  }
}
#{c(header iconWrapper)} {
  margin: 0 1px;
  padding: 2px 3px;
  box-sizing: content-box;
}
#{c(header iconWrapper)} > svg > foreignObject {
  mask: none;
}

// MODAL POPOUT
#{c(other cv headerBarModalContent)} {
  a {
    color: cv('colors.main');
  }
}
#{c(header input)}:focus {
  background: transparent;
  box-shadow: inset 0 0 0 1px cv('colors.main');
}
#{c(other cv headerChannelNameOuter)}:hover #{c(header input)} {
  box-shadow: inset 0 0 0 1px cv('colors.main');
}
