@use "backend" as *;

/* CHANNEL LIST PANELS */
#{c(sidebar server panel panels)} {
  background: transparent;
  > :first-child {
    box-shadow: 0 -2px 10px rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.3));
  }
}
#{c(main dark)} #{c(sidebar server panel activity panel)} {
  background-color: transparent;
}

// ACCOUNT & CONNECTION PANELS
#{c(sidebar server panel container)} {
  > #{c(other cv flex)} {
    background: rgba(0, 0, 0, 0.3);
    border-radius: 15px;
    > :nth-child(n + 2) {
      position: relative;
      margin-left: -1px;
      &:before {
        content: '';
        position: absolute;
        left: 0;
        top: 2px;
        bottom: 2px;
        width: 1px;
        background: hsla(0, 0%, 100%, 0.2);
      }
    }
  }
}
/* Account for account panel width scaling under
  new design */
#{c(main dark)} #{c(sidebar server panel avatarWrapper)} {
  min-width: calc(var(--channels-width) - 120px);
  &:hover {
    background-color: hsla(0, 0%, 100%, 0.1);
  }
}

// BUTTONS
button#{c(sidebar server panel buttons button)} {
  width: 32px;
  height: 32px;
  opacity: 1;
  > #{c(button contents)} > svg {
    @include bg($rep: no-repeat, $pos: center, $size: 18px);
    color: #fff;
    opacity: 0.5;
    transition: all 0.1s ease-in-out;
    > path[fill*='var(--interactive-normal)'] {
      fill: #fff;
    }
  }
  &:hover {
    &#{c(sidebar server panel buttons enabled)} {
      background: transparent;
    }
    > #{c(button contents)} > svg {
      opacity: 0.7;
    }
  }
  &#{c(sidebar server panel buttons disabled)} {
    > #{c(button contents)} > svg {
      opacity: 0.1;
    }
  }
}
#{c(sidebar server panel voice actionButtons actionButtons)} {
  grid-gap: 6px;
}
#{c(sidebar server panel voice actionButtons button)} {
  &#{c(sidebar server panel voice actionButtons color)} {
    padding: 0;
    &#{c(sidebar server panel voice actionButtons active)} {
      background-color: #fff;
      color: cv('colors.main');
      &:hover {
        background: hsla(0, 0%, 100%, 0.95);
        color: cv('colors.hover');
      }
      #{c(sidebar server panel buttons lottieIcon)} {
        --__lottieIconColor: currentcolor !important;
      }
    }
  }
}

// ACCOUNT PANEL
#{c(main dark)} #{c(sidebar server panel container)} {
  position: relative;
  background: transparent;
  // SOME POSITIONING
  #{c(other cv accountPanelTagButton)},
  #{c(other cv accountPanelTagless)} {
    min-width: calc(100% - 100px);
    width: auto;
    &:hover {
      background-color: hsla(0, 0%, 0%, 0.3);
      color: #fff;
    }
  }
  // AVATAR
  #{c(sidebar server panel avatar)} {
    width: 32px !important;
    height: 32px !important;
    transition: all 0.15s ease-in-out;
    &:after {
      content: 'Status';
      position: absolute;
      @include stretch;
      color: #fff;
      font-size: 5px;
      font-weight: 700;
      text-align: center;
      line-height: 32px;
      text-transform: uppercase;
      opacity: 0;
      transition: all 0.15s ease-in-out;
      pointer-events: none;
    }
    foreignObject {
      transition: all 0.15s ease-in-out;
    }
    &:hover {
      opacity: 1;
      &:after {
        font-size: 10px;
        opacity: 1;
      }
      foreignObject {
        opacity: 0.5;
      }
    }
  }
  // NAME TAG
  #{c(sidebar server panel username)} {
    color: #fff;
  }
}

// CONNECTION PANEL
#{c(sidebar server panel voice container)} {
  > #{c(other cv flex)} {
    background: rgba(0, 0, 0, 0.3);
    border-radius: 5px;
    padding: 5px;
  }
  border-color: transparent;
  background: transparent;
  #{c(sidebar server panel voice inner)} {
    #{c(other cv rtcConnectionStatus)} {
      #{c(other cv rtcConnectionPing)} {
        width: 16px;
        height: 16px;
        margin-right: 3px;
        background-size: 16px;
      }
    }
  }
  #{c(sidebar server panel voice channel)} {
    color: hsla(0, 0%, 100%, 0.3);
    opacity: 1;
    transition: all 0.15s ease-in-out;
    &:hover {
      color: hsla(0, 0%, 100%, 0.5);
      text-decoration: none;
    }
  }
}

// ACTIVITY PANEL
#{c(sidebar server panel activity activityPanel)} {
  border-color: transparent;
  #{c(sidebar server panel activityActions)} {
    background: rgba(0, 0, 0, 0.3);
    border-radius: 15px;
    > :nth-child(n + 2) {
      position: relative;
      margin-left: -1px;
      &:before {
        content: '';
        position: absolute;
        left: 0;
        top: 2px;
        bottom: 2px;
        width: 1px;
        background: hsla(0, 0%, 100%, 0.2);
      }
    }
  }
}

// VIDEO BADGE
#{c(other cv panelLiveBadge)} {
  background-color: cv('colors.main');
}

// NOISE CANCELLATION POPOUT
#{c(sidebar server panel voice noiseCancellationPopout)} {
  background-color: rgba(0, 0, 0, 0.7);
}

// QUEST PANEL
#{c(main dark)} #{c(other cv questPanel)} {
  background-color: transparent;
}
#{c(other cv questPanelAccepted)} {
  background: transparent !important;
}
#{c(other cv questPanelAcceptedExpandedBackground)} {
  background: transparent !important;
  border-top: 2px solid hsla(0, 0%, 100%, 0.05);
}
#{c(other cv questPanelContentExpanded)} {
  background: rgba(0, 0, 0, 0.6);
  border-radius: 8px 8px 0 0;
}
#{c(other cv questPanelAcceptedExpandedContent)} {
  visibility: hidden;
  #{c(other cv questPanelExpanded)} & {
    visibility: visible;
  }
}

// SPOTIFY/YT MUSIC MAYBE?/IDK
#{c(other cv listeningAlongPanel)} {
  background: transparent;
  #{c(sidebar server panel username)} {
    color: cv('colors.main');
  }
}
