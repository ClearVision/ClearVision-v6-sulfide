@use "backend" as *;

/* CHAT CHANNEL TEXT AREA */
#{c(chatForm form)} {
  margin-top: 1px;
  &:before,
  &:after {
    display: none;
  }
  .charcounter {
    color: hsla(0, 0%, 100%, 0.3);
  }
}
#{c(chatForm channelTextAreaBase)} {
  background: rgba(0, 0, 0, 0.6);
  transition: all 0.15s ease-in-out;
  &:focus-within {
    box-shadow: 0 0 2px 2px cv('colors.main');
  }

  #{c(chatForm scrollableContainer)} {
    background: transparent;
    border: 2px solid transparent;
  }
  #{c(chatForm attachButton)} {
    padding: 10px 10px 10px 12px;

    #{c(chatForm attachButtonPlus)} {
      color: hsla(0, 0%, 100%, 0.7);
      transition: all 0.15s ease-in-out;
    }
    &:hover {
      #{c(chatForm attachButtonPlus)} {
        color: hsla(0, 0%, 100%, 0.9);
      }
    }
  }
  #{c(chatForm textArea)} {
    #{c(chatForm placeholder)} {
      color: hsla(0, 0%, 100%, 0.4);
    }
    &#{c(chatForm textAreaSlate)} {
      margin-left: 10px;
    }
  }

  // BUTTONS
  #{c(chatForm buttonInner)} {
    color: hsla(0, 0%, 100%, 0.7);
    transition: all 0.15s ease-in-out;
    &:hover {
      color: hsla(0, 0%, 100%, 0.9);
    }
  }

  // TYPING
  #{c(chatForm typing)} {
    background: transparent;
    #{c(chatForm typingText)} {
      color: hsla(0, 0%, 100%, 0.5);
      > strong {
        color: hsla(0, 0%, 100%, 0.7);
        font-weight: 700;
      }
    }
  }
}

// LINK
#{c(chatForm inlineLink)} {
  color: var(--url-color);
}

// FOLLOW CHANNEL
#{c(chatForm followWrapper)} {
  background-color: hsla(0, 0%, 0%, 0.6);
}

// ATTACHED BARS
#{c(chatForm stackedBars)} {
  background: transparent;
}
#{c(chatForm stackedAttachedBar)} {
  border-bottom: 1px solid hsla(0, 0%, 100%, 0.07);
}

// REPLY
#{c(chatForm replyBar)},
#{c(chatForm threadSuggestionBar)} {
  background: transparent;
  border: 2px solid transparent;
  box-shadow: none;
}
#{c(other cv replyCloseButton)} {
  padding: 8px 16px 8px 4px;
  margin-left: 4px;
}
#{c(other cv replySeperator)} {
  visibility: hidden;
  height: 0px;
  width: 0px;
}

// SLASH COMMANDS
#{c(main dark)} {
  #{c(other cv autocompleteOptionPill)} {
    background-color: hsla(0, 0%, 100%, 0.05);
    border-color: hsla(0, 0%, 100%, 0.07);
    &#{c(other cv autocompleteOptionPillSelected)} {
      border-color: cv('colors.main') !important;
    }
  }
  #{c(other cv autocompleteOptionPillKey)} {
    background-color: hsla(0, 0%, 100%, 0.07);
  }
}

// UPLOADER
#{c(chatForm inlineUpload)} {
  background-color: transparent;
}

// TIMEOUT
#{c(modals timedOut spamBanner)} {
  background: rgba(0, 0, 0, 0.6);
}
#{c(modals timedOut container)} {
  background: rgba(0, 0, 0, 0.5);
  #{c(modals timedOut iconContainer)} {
    background: rgba(0, 0, 0, 0.2);
  }
}

// INLINE CODE PREVIEW
#{c(chatForm beforeInlineCode)},
#{c(chatForm afterInlineCode)} {
  background: rgba(255, 255, 255, 0.05);
  padding: 3.5px 0.5px;
}
#{c(chatForm inlineCode)} {
  background: rgba(255, 255, 255, 0.1);
  padding: 3.5px 0.5px;
}

// CHAT TOOLBAR
#{c(modals formattingToolbar toolbar)} {
  background-color: cv('bg.general.popout');
  &::before {
    border-top: 8px solid hsla(0, 0%, 0%, 0.8);
  }
}
#{c(other cv chatToolbarButton)}:hover {
  background-color: hsla(0, 0%, 100%, 0.05);
}
#{c(other cv chatToolbarIcon)} {
  color: hsla(0, 0%, 100%, 0.7);
}