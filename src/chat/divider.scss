@use "backend" as *;

/* CHAT DIVIDER */

// UNREAD
// -6px is to account for the 1px height of the divider
#{c(chat dividerUnread)} #{c(chat dividerContent)} {
  color: cv('colors.main');
}
#{c(chat unreadPill)} {
  background-color: cv('colors.main');
  top: -6px;
}
#{c(chat unreadPillCapStroke)} {
  fill: cv('colors.main');
  color: cv('colors.main');
}
// DATE
#{c(chat dividerContent)} {
  background: transparent;
  color: cv('colors.main');
}
// change to no border / bg system
#{c(chat divider)} {
  border: none;
  height: 1px;
  background: var(--background-modifier-accent);
  // change color for when read
  &#{c(chat dividerUnread)} {
    border: none;
    height: 1px;
    background: cv('colors.main');
    // create gap when date is there
    &:has(#{c(chat dividerContent)}) {
      border: none;
      height: 1px;
      background: radial-gradient(circle at 50% 50%, rgba(0, 0, 0, 0) 55px, cv('colors.main') 55px);
    }
  }
  // create gap when date is there
  &:has(#{c(chat dividerContent)}) {
    border: none;
    height: 1px;
    background: radial-gradient(circle at 50% 50%, rgba(0, 0, 0, 0) 55px, var(--background-modifier-accent) 55px);
  }
}
