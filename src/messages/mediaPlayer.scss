@use "backend" as *;

/* EMBED MEDIA PLAYER */
#{c(main dark)} #{c(embeds videoPlayWrapper)} {
  background-color: rgba(0, 0, 0, 0.4);
  border-color: transparent;
}
#{c(media audioControls)} {
  background: transparent;
}
#{c(other cv playerVideoControls)} {
  background: rgba(0, 0, 0, 0.6);
}
#{c(embeds videoPlayWrapper)} {
  #{c(media metadataDownload)},
  #{c(media controlIcon)} {
    transition: all 0.15s ease-in-out;
  }
}
#{c(media audioMetadata)} {
  &:before {
    content: '';
    width: 36px;
    height: 36px;
    background: url(https://clearvision.github.io/icons/file_music.svg) center/100% no-repeat;
    opacity: 0.5;
  }
  #{c(media metadataSize)} {
    color: hsla(0, 0%, 100%, 0.3);
  }
}

// MEDIA BAR
#{c(other cv playerMediaBarWrapper)} {
  background: hsla(0, 0%, 100%, 0.07);
  &:before,
  &:after {
    background: hsla(0, 0%, 100%, 0.07);
  }
}
#{c(media barBuffer)} {
  background: hsla(0, 0%, 100%, 0.04);
  opacity: 1;
  &:before,
  &:after {
    background: hsla(0, 0%, 100%, 0.04);
    opacity: 1;
  }
}
#{c(media barGrabber)},
#{c(media barProgress)} {
  background: cv('colors.main');
  transition: background 0.15s ease-in-out;
}
#{c(media barProgress)} {
  &:before,
  &:after {
    background: cv('colors.main');
  }
}
#{c(media barPreview)} {
  background: #fff;
  &:before,
  &:after {
    background: #fff;
  }
  opacity: 0;
  transition: opacity 0.15s ease-in-out;
}
#{c(media bubble)} {
  background: cv('colors.main');
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  color: #fff;
  transform: translateX(-50%) rotateX(-90deg);
  transform-origin: 50% 100%;
  transition: all 0.15s ease-in-out, left 0s;
  &:before {
    border-top-color: cv('colors.main');
  }
}
#{c(media barInteraction)}:hover {
  #{c(media barGrabber)} {
    background: cv('colors.main');
  }
  #{c(media barPreview)} {
    opacity: 0.1;
  }
}
#{c(media barInteractionDragging)} {
  #{c(media barProgress)},
  #{c(media barGrabber)},
  #{c(media bubble)} {
    background: cv('colors.hover');
  }
  #{c(media bubble)} {
    &:before {
      border-top-color: cv('colors.hover');
    }
  }
}
#{c(media barInteraction)}:hover,
#{c(media barInteractionDragging)} {
  #{c(other cv playerMediaBarWrapper)} {
    box-shadow: none;
    filter: drop-shadow(0 0 1px rgba(0, 0, 0, 0.3));
  }
  #{c(media bubble)} {
    transform: translateX(-50%);
  }
}

// Download button
#{c(other cv playerMediaDownload)} {
  background-color: rgba(0, 0, 0, 0.6);
}
// VOICE MESSAGE EMBED
/*voice message*/

#{c(main dark)} #{c(embeds voiceMessage container)} {
  background: rgba(0, 0, 0, 0.6);
  &:not(#{c(embeds voiceMessage playing)}) #{c(embeds voiceMessage playButtonContainer)} {
    background: cv('colors.main');
    &:hover,
    &:active {
      background: cv('colors.hover');
    }
  }
}
#{c(embeds voiceMessage playButtonContainer)} {
  &:active {
    #{c(embeds voiceMessage playIcon)} {
      color: #fff;
    }
  }
}
#{c(embeds voiceMessage ripple)} {
  background-color: transparent;
}
// VOICE MESSAGE PLAYING
#{c(embeds voiceMessage playing)} {
  #{c(embeds voiceMessage playButtonContainer)} {
    background: #fff;
  }
  #{c(embeds voiceMessage playIcon)} {
    color: cv('colors.main');
  }
}
