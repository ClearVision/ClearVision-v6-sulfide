
@use "../../classes/_classes" as *;
@use "../../backend/functions" as *;
@use "../../backend/mixins" as *;
@use "../../backend/variables" as *;

/* POLL */
#{c(embeds poll container)} {
  background: rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.4));
}
/* selection */
#{c(embeds poll answerSelectionIcon)} #{c(other cv pollRadioForeground)} {
  fill: cv('colors.main');
}

#{c(embeds poll answer)} #{c(embeds poll answerInner)}#{c(embeds poll currentlyVoting)}#{c(embeds poll selected)} {
  outline: 2px solid cv('colors.main');
}
#{c(embeds poll answer)}:hover #{c(embeds poll answerInner)}#{c(embeds poll currentlyVoting)} {
  outline: 2px solid cv('colors.hover');
}
#{c(embeds poll secondaryButtonPresentation)} {
  background-color: cv('colors.main');
  color: #fff;
}

#{c(embeds poll answerInner)} {
  background-color: hsla(0, 0%, 100%, 0.07);
}

#{c(other cv pollCheckbox)} {
  border: 2px solid hsla(0, 0%, 100%, 0.5);
  &#{c(other cv pollCheckboxSelected)} {
    background-color: transparent;
    border: 2px solid cv('colors.main');
  }
}
// VIEW VOTES
#{c(other cv pollVotesPopoutAnswerScroller)},
#{c(other cv pollVotesPopoutVoters)} {
  background-color: transparent;
}

// CREATE POLL
#{c(other cv pollCreatePopoutAnswerInputWrapper)} {
  background: none;
  border: none;
}
#{c(other cv pollCreatePopoutAddAnswer)} {
  background-color: cv('colors.main');
  &:hover {
    background-color: cv('colors.main');
  }
}
#{c(other cv pollCreatePopoutAddAnswerIcon)} {
  color: #fff;
}
#{c(other cv pollCreatePopoutAddAnswerLabel)} {
  color: #fff !important;
}

// POLL ENDED
#{c(embeds poll finished container)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
