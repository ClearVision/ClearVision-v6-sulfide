@use "../../classes/_classes" as *;
@use "../../backend/functions" as *;
@use "../../backend/mixins" as *;
@use "../../backend/variables" as *;

/* MESSAGE */
// #{c(other cv messages)} {
//   #{c(other cv messageGroup)} {
//     transition: background 0.3s ease-in-out;
//     &:active {
//       background: hsla(0, 0%, 100%, 0.1);
//       transition-delay: 0.3s;
//     }
//   }
// }
#{c(chat message)} {
  // HEADER
  #{c(chat chatAvatar)} {
    transition: all 0.3s ease-in-out, transform 0.1s ease-in-out;
    &:active {
      transform: scale(0.9);
    }
  }
  #{c(chat chatTimestamp)},
  #{c(chat chatTimestamp)}#{c(other cv messageTimestampAlt)} {
    text-align: center;
    color: hsla(0, 0%, 100%, 0.5);
  }

  // CONTENT
  // #{c(other cv messageContent)} {
  //   color: cv('text.normal');
  // }
  #{c(chat chatWelcomeContainer)} {
    color: hsla(0, 0%, 100%, 0.5);
  }

  // BLOCKQUOTE
  #{c(chat markup)} {
    #{c(chat blockquoteDivider)} {
      background: hsla(0, 0%, 100%, 0.2);
      border-radius: 0;
    }
  }
}

// GIFS/EMBEDS
#{c(other cv messageInlineMediaEmbed)} {
  max-width: max-content;
}

// SPOILER
#{c(chat spoiler markdownContent)} {
  background-color: hsla(0, 0%, 0%, 0.8);
}

// LINKS
#{c(chat markup)} a,
#{c(main anchorLink)} {
  color: var(--url-color);
}
#{c(chat blockedContent)} {
  #{c(other cv anchorAction)} {
    color: var(--url-color);
  }
}

// INVALID GIFT
#{c(main dark)} {
  #{c(embeds gift)} {
    background-color: hsla(0, 0%, 0%, 0.4);
    &:hover {
      background-color: hsla(0, 0%, 0%, 0.4);
    }
  }
}

// REPLY
#{c(chat repliedMessage)} {
  #{c(other cv messageRepliedSpine)} {
    border-color: cv('colors.main');
    &#{c(other cv messageRepliedContentHovered)} {
      border-color: cv('colors.hover');
    }
  }
  #{c(chat repliedTextPreview)} {
    opacity: 0.7;
    max-height: unset;
    color: #fff;
    &#{c(other cv messageRepliedSpineHovered)} {
      opacity: 1;
    }
    #{c(other cv messageRepliedTextPlaceholder)} {
      color: cv('colors.main');
    }
  }
  &#{c(other cv messageRepliedExecutedCommand)} {
    #{c(other cv messageRepliedAppLauncherCommandName)} {
      color: cv('colors.main');
      background: transparent;
      text-decoration: underline;
      &:hover {
        color: cv('colors.hover');
        background: transparent;
      }
    }
    #{c(other cv messageRepliedCommandName)} {
      color: cv('colors.main');
    }
  }
}

// THREADS
#{c(other cv threadChatIcon)} {
  color: cv('colors.main');
  filter: drop-shadow(0 0 3px);
  height: 22px;
  width: 22px;
}
#{c(embeds threadContainer)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv threadCTA)} {
  color: cv('colors.main');
}
#{c(chat cozy)} {
  &#{c(threads msgHasThread)} {
    &:after {
      border-color: cv('colors.main');
    }
  }
}
#{c(threads jump)} {
  background-color: cv('colors.main');
  color: #fff;
  &:hover {
    background-color: cv('colors.hover');
    color: #fff;
  }
}

// BUTTONS
#{c(chat buttonWrapper)} {
  background-color: transparent;
  #{c(chat button)} {
    color: hsla(0, 0%, 100%, 0.7);
    &:hover,
    &#{c(chat buttonSelected)} {
      background-color: hsla(0, 0%, 100%, 0.1);
      color: #fff;
    }
  }
}

// EDITING
#{c(main dark)} #{c(other cv operations)} {
  color: hsla(0, 0%, 100%, 0.5);
  > a {
    color: cv('colors.main');
  }
}

#{c(chat replying)} {
  background-color: hsla(0, 0%, 100%, 0.05);
  #{c(main mouseMode)}#{c(main options fullMotion)} &:hover {
    background-color: hsla(0, 0%, 100%, 0.08);
  }
  &:before {
    background-color: cv('colors.main');
  }
}

// BEGINNING DM WAVE
#{c(chat compactButton)},
#{c(other cv waveButtonDisabled)} {
  background-color: cv('colors.main');
}

#{c(chat compactButton)}:hover {
  background-color: cv('colors.hover');
}

// PUBLISH TO FOLLOWERS
#{c(other cv messagePublishBumpBox)} {
  background: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv messagePublishIcon)},
#{c(other cv messagePublishTagline)} {
  color: #fff;
}
#{c(other cv messagePublishCloseIcon)},
#{c(other cv messagePublishPermanentHide)} {
  color: hsla(0, 0%, 100%, 0.4) !important;
}

// AUTOMOD MESSAGE
#{c(other cv messageAutomodCard)},
#{c(other cv messageAutomodFooterContainer)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv messageAutomodCard)} {
  &#{c(other cv messageAutomodCardSelected)} {
    background-color: hsla(0, 0%, 0%, 0.4);
  }
}
#{c(other cv messageAutomodFooterAction)} {
  // #{c(other cv textExtraSmallNormal)},
  #{c(other cv messageAutomodFooterIcon)} path {
    color: var(--url-color);
  }
}

// free nitro trial...idk where to put this - Snow
#{c(other cv nitroTrial)} {
  background: rgba(0, 0, 0, 0.4);
  box-shadow: none;
  border: 1px solid cv('colors.main');
  &:hover {
    border: 1px solid cv('colors.hover');
  }
}

#{c(main dark)} #{c(other cv nitroTrial)}:hover {
  background-color: rgba(0, 0, 0, 0.4);
}
