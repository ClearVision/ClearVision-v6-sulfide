@use "../../classes/_classes" as *;
@use "../../backend/functions" as *;
@use "../../backend/mixins" as *;
@use "../../backend/variables" as *;

/* USER SETTINGS */

// MY ACCOUNT
#{c(userSettings accountProfile)} {
  background-color: rgba(0, 0, 0, 0.4);
}
#{c(userSettings accountProfileBackground)},
#{c(userSettings fieldList)} {
  background-color: transparent;
}
#{c(userSettings accountProfileAvatar)} {
  background: transparent;
  border-color: transparent;
}
#{c(profile settings badgeList)} {
  background-color: rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.4));
}
// MY ACCOUNT - VERIFY PHONE
#{c(other cv phoneInput)} {
  background-color: hsla(0, 0%, 100%, 0.07);
  border: none;
  box-shadow: 0 0 0 2px hsla(0, 0%, 100%, 0.09);
  &:focus-within {
    box-shadow: 0 0 2px 2px cv('colors.main');
  }
  #{c(other cv phoneInputField)} {
    background-color: transparent;
  }
}

// USER PROFILE
#{c(modals avatarUpload optionBox)} {
  background-color: transparent;
}
#{c(modals avatarUpload contentCircle)} {
  background-color: cv('colors.main');
  border: 2px solid cv('colors.main');
}
#{c(modals avatarUpload uploadIcon)} {
  padding: 0;
}
#{c(modals avatarUpload gifIconContainer)} {
  background-color: hsla(0, 0%, 0%, 0.8);
}
#{c(modals avatarUpload gifIcon)} {
  background-color: transparent;
  path {
    fill: #fff;
  }
}
#{c(other cv avatarEditingContainer)} {
  background-color: transparent;
}

// USER PROFILE - AVATAR DECO
#{c(other cv avatarDecoItem)} {
  background-color: hsla(0, 0%, 100%, 0.05);
  &:hover {
    background-color: hsla(0, 0%, 100%, 0.07);
  }
  &#{c(other cv avatarDecoItemSelected)} {
    box-shadow: inset 0 0 0 2px cv('colors.main');
  }
}
#{c(other cv avatarDecoItemLock)} {
  background-color: cv('colors.main') !important;
}
#{c(other cv avatarDecoPreview)},
#{c(other cv avatarDecoPreviewSmall)} {
  background-color: hsla(0, 0%, 100%, 0.05);
}
#{c(other cv avatarDecoPreviewUpsell)} {
  background: transparent;
  border: 2px solid var(--premium-tier-2-purple-for-gradients-2);
}

// USER PROFILE - PROFILE EFFECT
#{c(other cv profileEffectItem)} {
  background-color: hsla(0, 0%, 100%, 0.05);
  &:hover {
    background-color: hsla(0, 0%, 100%, 0.07);
  }
  &#{c(other cv profileEffectItemSelected)} {
    box-shadow: inset 0 0 0 2px cv('colors.main');
  }
}
#{c(other cv profileEffectDescription)},
#{c(other cv profileEffectDescriptionUpsell)},
#{c(other cv profileEffectDescriptionContainer)} {
  background: transparent;
}
#{c(other cv profileEffectDescriptionUpsell)} {
  border: 2px solid var(--premium-tier-2-purple-for-gradients-2);
}
#{c(other cv profileEffectItemLock)} {
  background-color: cv('colors.main') !important;
}

// USER PROFILE - SERVER PROFILES UPSELL
#{c(userSettings premiumFeatureBorder)} {
  background: hsla(0, 0%, 0%, 0.4);
  border: 2px solid var(--premium-tier-2-purple-for-gradients-2);
}
#{c(other cv userSettingsProfilePremiumBackground)} {
  background: transparent;
}
#{c(other cv userSettingsProfileUpsellContainer)} {
  background: hsla(0, 0%, 0%, 0.4);
}

// PRIVACY AND SAFETY - STANDING
#{c(main dark)} #{c(other cv userSettingsPrivacyStandingContainer)}#{c(card card)} {
  background-color: transparent;
}
#{c(other cv userSettingsPrivacyStandingAvatarBG)} {
  background-color: transparent;
}
#{c(other cv userSettingsPrivacyStandingLine)},
#{c(other cv userSettingsPrivacyStandingMarker)} {
  background-color: hsla(0, 0%, 100%, 0.1);
}
#{c(other cv userSettingsPrivacyStandingMarker)} {
  #{c(other cv userSettingsPrivacyStandingMarkerEmpty)} {
    background-color: hsla(0, 0%, 100%, 0.1);
  }
  svg circle {
    fill: #fff;
  }
}

// FAMILY CENTER
#{c(other cv userSettingsFamilyContainers)},
#{c(other cv userSettingsFamilyBox)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv userSettingsFamilyCircle)},
#{c(other cv userSettingsFamilyIconContainer)} {
  background-color: transparent;
}
// what are connected parents able to see?
#{c(other cv userSettingsFamilyRow)} {
  background-color: hsla(0, 0%, 100%, 0.07);
}

// AUTHORIZED APPS
// removed, covered by #{c(card card)} theming

// DEVICES
#{c(userSettings devicesSessionIcon)} {
  background-color: cv('colors.main');
  color: #fff;
}

// CONNECTIONS
#{c(userSettings addConnectionContainer)} {
  background-color: rgba(0, 0, 0, 0.4);
  border-color: hsla(0, 0%, 100%, 0.07);
}
:is(#{c(userSettings addAccountButtonInner)},#{c(modals addConnections accountButtonInner)}) {
  background-color: hsla(0, 0%, 100%, 0.05);
  &:hover {
    background-color: hsla(0, 0%, 100%, 0.07);
  }
}
#{c(other cv subEnabledServers)} {
  background: rgba(0, 0, 0, 0.6);
}

// BILLING
#{c(main dark)} {
  #{c(other cv userSettingsBillingIndicator)} {
    background-color: cv('colors.main');
  }
  #{c(other cv userSettingsBillingPaymentPane)},
  #{c(other cv userSettingsBillingPaginator)} {
    background-color: transparent;
  }
  #{c(other cv userSettingsBillingBottomDivider)} {
    border-color: rgba(0, 0, 0, 0.07);
  }
  #{c(other cv userSettingsBillingHoverablePayment)} {
    &:hover {
      background-color: rgba(255, 255, 255, 0.05);
    }
  }
  #{c(other cv userSettingsBillingPayment)} {
    background-color: transparent;
    &:not(#{c(other cv userSettingsBillingHoverablePayment)}) {
      background-color: hsla(0, 0%, 0%, 0.4);
    }
  }
  #{c(other cv userSettingsBillingExpandedInfo)} {
    background-color: transparent;
    box-shadow: 0 0 2px 2px cv('colors.main');
  }
  #{c(other cv userSettingsBillingMethodText)} {
    color: #fff;
  }
}

// NITRO
#{c(other cv userSettingsNitroPerkCard)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv userSettingsNitroGiftCard)} {
  background: rgba(0, 0, 0, 0.4);
}
#{c(main dark)} #{c(other cv userSettingsNitroShareCard)} {
  background: rgba(0, 0, 0, 0.4);
  backdrop-filter: none;
}

// SUBSCRIPTIONS
#{c(main dark)} {
  :is(:is(#{c(userSettings subscriptionsNoItemsIconSubs)},#{c(userSettings subscriptionsNoItemsIconCredits)})) {
    background-color: transparent;
    > g > :is(path, rect, circle) {
      fill-opacity: 0.8 !important;
      stroke-opacity: 0.8 !important;
    }
  }
}
#{c(userSettings subscriptionsDetailsBlock)} {
  background-color: rgba(0, 0, 0, 0.4);
}
#{c(other cv userSettingsSubsAccountCredit)} {
  background-color: rgba(0, 0, 0, 0.4);
}

// GIFT INVENTORY
#{c(userSettings giftPromotionCard)} {
  background-color: rgba(0, 0, 0, 0.4);
}
#{c(other cv copyGiftCode)} {
  background-color: hsla(0, 0%, 100%, 0.07);
}
#{c(main dark)} #{c(other cv giftQuestContainer)} {
  background-color: rgba(0, 0, 0, 0.4);
}
#{c(other cv giftQuestProgress)} {
  color: cv('colors.main') !important;
}

// SERVER BOOST
#{c(other cv userSettingsBoostHeaderWave)} {
  fill: rgba(0, 0, 0, 0.6);
}
#{c(other cv userSettingsBoostApplied)} {
  background-color: transparent;
}
#{c(other cv userSettingsBoostGuildContainer)},
#{c(other cv userSettingsBoostContainer)},
#{c(other cv userSettingsBoostGuildSearchWrapper)},
#{c(other cv userSettingsBoostRecognitionCard)},
#{c(other cv userSettingsBoostFAQ)} {
  background-color: rgba(0, 0, 0, 0.4);
}
#{c(other cv userSettingsBoostTransferSearch)} {
  background-color: rgba(255, 255, 255, 0.07);
}
#{c(other cv userSettingsBoostTransferButton)} {
  background-color: cv('colors.main');
}
#{c(other cv freeBoost)} {
  background-color: rgba(0, 0, 0, 0.4);
}
.content_c258fa:after,
.content_c258fa:before {
  border-color: transparent;
}

// APPEARANCE
#{c(experiments themesSelectedCircle)} {
  width: calc(100% + 2px);
  height: calc(100% + 2px);
  box-shadow: inset 0 0 0 2px cv('colors.main');
  top: -1px;
  left: -1px;
}
#{c(experiments themesCheckmark)} {
  color: cv('colors.main');
}

// ACCESSIBILITY
#{c(appSettings previewMessage)} {
  background-color: transparent;
}

// VOICE
#{c(main dark)} {
  #{c(other cv userSettingsMicTest)} {
    #{c(other cv userSettingsMicTestContainer)} {
      background: cv('colors.main') !important;
      mask-image: url(https://clearvision.github.io/icons/pill.svg);
    }
    #{c(other cv userSettingsMicTestProgress)} {
      background-color: hsla(0, 0%, 0%, 0.7);
    }
    #{c(appSettings voiceNotches)} {
      rect {
        fill: none;
      }
    }
  }
  #{c(other cv userSettingsVoiceSensitivity)} {
    background-color: hsla(0, 0%, 100%, 0.2);
    &#{c(other cv userSettingsVoiceSensitivitySpeaking)} {
      background-color: cv('colors.main');
    }
  }
}

#{c(other cv userSettingsEntranceSoundButton)} {
  background-color: hsla(0, 0%, 100%, 0.1);
}

// VIDEO
#{c(appSettings voicePreviewContainer)} {
  background-color: rgba(0, 0, 0, 0.7);
  border-color: hsla(0, 0%, 100%, 0.07);
}
#{c(other cv userSettingsVideoBgOption)} {
  background-color: rgba(0, 0, 0, 0.7);
}
#{c(appSettings voiceBackgroundOptionRing)} {
  border: 2px solid cv('colors.main');
}
#{c(appSettings voiceBackgroundOptionInner)} {
  background-color: transparent;
}

// GAME OVERLAY
#{c(main dark)} {
  #{c(appSettings gameNowPlaying)} {
    background-color: rgba($color: #43b581, $alpha: 0.6);
  }
}
#{c(appSettings overlayWrapper)} {
  border-color: cv('colors.main');
}
#{c(appSettings overlayOption)} {
  background-color: hsla(0, 0%, 100%, 0.05);
  opacity: 1;
  &:hover {
    background-color: hsla(0, 0%, 100%, 0.07);
    opacity: 1;
  }
  &#{c(appSettings overlaySelected)} {
    background-color: cv('colors.main');
    border-color: cv('colors.main');
  }
}

// KEYBINDS
#{c(main dark)} {
  #{c(other cv userSettingsKeybindContainer)} {
    background-color: hsla(0, 0%, 100%, 0.05);
    box-shadow: 0 0 0 2px hsla(0, 0%, 100%, 0.07);
    border-color: transparent;
    &:not(#{c(other cv userSettingsKeybindDisabled)}):hover {
      border-color: transparent;
      box-shadow: 0 0 2px 2px cv('colors.main');
    }
    &#{c(other cv userSettingsKeybindRecording)} {
      color: #fff;
      box-shadow: 0 0 2px 2px cv('colors.main');
      animation: cv-shadow-pulse 1s ease-in infinite;
    }
  }
}

// ACTIVITY STATUS
#{c(main dark)} {
  #{c(appSettings gameNotDetected)} {
    background-color: hsla(0, 0%, 0%, 0.4);
    border: hsla(0, 0%, 100%, 0.07);
  }
  #{c(appSettings addGamePopout)} {
    background-color: hsla(0, 0%, 0%, 0.7);
  }
  #{c(appSettings game)} {
    box-shadow: 0 1px 0 0 hsla(0, 0%, 100%, 0.04);
  }
  #{c(appSettings gameNameInput)} {
    &:hover,
    &:focus {
      background-color: hsla(0, 0%, 100%, 0.05);
      border: hsla(0, 0%, 100%, 0.07);
    }
  }
}
