@use "../../classes/_classes" as *;
@use "../../backend/functions" as *;
@use "../../backend/mixins" as *;
@use "../../backend/variables" as *;

/* SERVER SETTINGS */

// OVERVIEW - server banner
#{c(other cv guildFeatureAvailabilityIndicator)} {
  background-color: cv('colors.main');
  color: #fff;
}

// ROLES
#{c(serverSettings roleEveryoneContainer)} {
  background-color: cv('colors.main');
  color: #fff;
  &:hover {
    background-color: cv('colors.hover');
  }
}
#{c(serverSettings roleSearch)} {
  background-color: hsla(0, 0%, 100%, 0.07);
  box-shadow: 0 0 0 2px hsla(0, 0%, 100%, 0.09);
  margin: 2px;
  &:focus-within {
    box-shadow: 0 0 2px 2px cv('colors.main');
  }
}
#{c(serverSettings roleEveryoneIcon)} {
  background-color: hsla(0, 0%, 0%, 0.6);
}
#{c(serverSettings roleRow)} {
  &:before,
  &:last-child:after {
    background-color: hsla(0, 0%, 100%, 0.1);
  }
  &:hover:not(#{c(serverSettings roleRowDisableHover)}) {
    background-color: rgba(255, 255, 255, 0.05);
    #{c(modals inbox roundButton)} & {
      background-color: hsla(0, 0%, 0%, 0.6);
      color: #fff;
      &:hover {
        background-color: cv('colors.hover');
        color: #fff;
      }
    }
  }
}

// ROLES - EDIT
#{c(serverSettings roleTitleContainer)} {
  background-color: transparent;
}
#{c(serverSettings roleHeader)} {
  background-color: transparent;
  &:before {
    content: '';
    @include stretch;
    position: absolute;
    z-index: -1;
    background: cv('bg.app.img') cv('bg.app.pos') / cv('bg.app.size') cv('bg.app.repeat') cv('bg.app.attach');
    @include filters(cv('bg.app'));
  }
  &:after {
    content: '';
    @include stretch;
    position: absolute;
    z-index: -1;
    background: cv('bg.app.overlay');
  }
}
#{c(other cv guildSettingsRoleList)} {
  #{c(other cv guildSettingsRoleListRow)} {
    &:hover {
      &:not(#{c(tab disabled)}) {
        background-color: hsla(0, 0%, 100%, 0.07);
      }
    }
    #{c(other cv roleCircle)} {
      &::before {
        background-color: transparent;
      }
    }
    &#{c(tab selected)} {
      background-color: transparent;
      #{c(other cv roleCircle)} {
        &::before {
          background-color: inherit;
        }
      }
    }
  }
}
#{c(serverSettings rolePreviewContainer)} {
  background-color: hsla(0, 0%, 0%, 0.6);
}

// View server as role selection bar
#{c(other cv guildSettingsRoleViewAsDropdown)} {
  background-color: hsla(0, 0%, 0%, 0.8);
}

// EMOJI
#{c(main dark)} {
  #{c(serverSettings emojiRow)}:before,
  #{c(other cv guildSettingsEmojiRemove)} {
    background-color: hsla(0, 0%, 0%, 0.4);
  }
}
#{c(serverSettings emojiRow)} {
  &:hover {
    #{c(serverSettings emojiAliasPlaceholder)} {
      visibility: hidden;
    }
  }
  #{c(serverSettings emojiAliasInput)} {
    #{c(serverSettings emojiInput)} {
      color: cv('text.normal');
      background-color: hsla(0, 0%, 100%, 0.07);
      border: none;
      box-shadow: 0 0 0 2px hsla(0, 0%, 100%, 0.09);
    }
    &:has(#{c(serverSettings emojiInput)}:focus-within) {
      + #{c(serverSettings emojiAliasPlaceholder)} {
        visibility: hidden;
      }
    }
  }
}

// STICKERS
#{c(other cv guildSettingsStickersUploadCard)} {
  background-color: rgba(0, 0, 0, 0.4);
  &:hover {
    background-color: cv('colors.hover');
  }
}
#{c(other cv guildSettingsStickersTierLock)} {
  color: #fff;
  opacity: 0.3;
}

// SAFETY SETUP
#{c(other cv guildSettingsSafetyChangeLog)},
#{c(other cv guildSettingsSafetyChecklist)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv guildSettingsSafetyPill)} {
  background-color: transparent;
  border: 2px solid cv('colors.main');
}
#{c(other cv guildSettingsSafetyItemWrapper)} {
  background-color: transparent;
}

// AUTOMOD
#{c(other cv automodBadge)} {
  border: none;
  padding: 4px 6px;
}
#{c(other cv automodEditCard)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv automodRuleIconContainer)} {
  background-color: cv('colors.main');
}
#{c(other cv automodRuleIcon)} {
  color: #fff;
}
#{c(other cv automodActionTag)} {
  background-color: transparent;
  border: 2px solid cv('colors.main');
}
#{c(other cv automodActionIcon)},
#{c(other cv automodActionText)} {
  color: #fff !important;
}
#{c(other cv automodStepIcon)} {
  background-color: hsla(0, 0%, 100%, 0.1);
}
#{c(other cv automodStepperCOntainer)} {
  background-color: hsla(0, 0%, 100%, 0.1);
  #{c(other cv input)} {
    &:focus {
      box-shadow: none;
    }
  }
}
#{c(other cv automodContentCard)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv automodCollapseableCard)} {
  background-color: hsla(0, 0%, 0%, 0.4);
  &:active {
    background-color: hsla(0, 0%, 0%, 0.6);
  }
  &#{c(other cv automodCollapseableCardToggled)}:active {
    background-color: hsla(0, 0%, 0%, 0.6);
  }
}
#{c(other cv automodCollapseableHeaderContainer)},
#{c(other cv automodCollapseableHeaderClickable)},
#{c(other cv automodCollapseablePointer)} {
  background-color: transparent;
}
#{c(other cv automodCollapsedContainer)} {
  background-color: transparent;
  border: none;
}
#{c(other cv automodCollapseableRadioBackground)} {
  &#{c(other cv automodCollapseableRadioSelected)} {
    background-color: hsla(0, 0%, 100%, 0.07);
  }
}
#{c(other cv automodKeywordsTextArea)},
#{c(other cv automodRegexTextArea)} {
  color: cv('text.normal');
  background-color: hsla(0, 0%, 100%, 0.07);
  border: none;
  box-shadow: 0 0 0 2px hsla(0, 0%, 100%, 0.09);
  &:focus {
    box-shadow: 0 0 2px 2px cv('colors.main');
  }
  &::placeholder {
    color: hsla(0, 0%, 100%, 0.3);
  }
}
#{c(other cv automodDropdown)} {
  background-color: hsla(0, 0%, 0%, 0.8);
  border: 1px solid hsla(0, 0%, 100%, 0.07);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}
#{c(other cv automodDropdownRowLabel)} {
  background-color: hsla(0, 0%, 100%, 0.1);
}
#{c(other cv automodDropdownChannelIcon)} {
  color: #fff;
}

// AUDIT LOG
#{c(main dark)} {
  #{c(other cv guildSettingsAuditLog)} {
    border-color: hsla(0, 0%, 100%, 0.07);
  }
  #{c(other cv guildSettingsAuditHeader)} {
    background-color: hsla(0, 0%, 0%, 0.4);
  }
  #{c(other cv guildSettingsAuditHeaderExpanded)},
  #{c(other cv guildSettingsAuditDivider)},
  #{c(other cv guildSettingsAuditChangeDetails)} {
    background-color: hsla(0, 0%, 0%, 0.6);
  }
}

// BANS
#{c(other cv guildSettingsBanContainer)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv guildSettingsBannedUser)} {
  background-color: hsla(0, 0%, 100%, 0.07);
}

// SERVER TEMPLATE
#{c(serverSettings templateDescriptionBox)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}

// COMMUNITY OVERVIEW
#{c(other cv guildSettingsCommunityUpsell)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv guildSettingsCommunityUpsellFooter)} {
  background-color: transparent;
}
// ONBOARDING
#{c(userSettings contentRegion)} {
  #{c(other cv guildSettingsOnboardingTestimonialContainer)} {
    background-color: transparent;
  }
  #{c(other cv guildSettingsOnboardingTestimonialQuotes)} {
    color: cv('colors.main');
  }
  // #{c(other cv guildSettingsOnboardingTestimonial)} {
  //   #{c(other cv textSmallMedium)} {
  //     color: #fff !important;
  //   }
  // }
  #{c(other cv guildSettingsOnboardingUpsell)} {
    background-color: rgba(0, 0, 0, 0.4);
  }
  #{c(other cv guildSettingsOnboardingUpsellList)} {
    background-color: transparent;
    &#{c(other cv guildSettingsOnboardingUpsellListSelected)} {
      background-color: hsla(0, 0%, 100%, 0.07);
    }
  }
  #{c(other cv guildSettingsOnboardingUpsellCheckboxCircle)} {
    background-color: cv('colors.main');
  }
  #{c(other cv guildSettingsOnboardingUpsellCheckbox)} {
    &#{c(other cv guildSettingsOnboardingUpsellListSelected)} {
      background-color: transparent;
      border-color: cv('colors.main');
    }
  }
  #{c(other cv serverGuideMessageInner)} {
    background-color: rgba(0, 0, 0, 0.4);
    // &#{c(other cv userPopoutInnerThemed)} {
    //   background-color: transparent;
    // }
  }
  #{c(other cv serverGuideAction)} {
    background-color: rgba(0, 0, 0, 0.4);
  }
  #{c(other cv serverGuideChannelIcon)} {
    background-color: cv('colors.main');
    svg {
      color: #fff;
    }
  }
}
// SERVER INSIGHTS
#{c(other cv guildSettingsInsightsAnalyticsCard)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other developerPortalCtaWrapper)} {
  background-color: transparent;
}
#{c(other cv guildSettingsInsightsNotEnoughMembers)} {
  background-color: var(--info-warning-background);
}
#{c(other cv guildSettingsInsightsMemberInsights)} {
  background-color: transparent;
}
#{c(other cv guildSettingsInsightsActions)} {
  background-color: transparent;
}

// ENABLE COMMUNITY
#{c(serverSettings enableCommunityGuildDetails)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(serverSettings enableCommunityFeatureCard)},
#{c(serverSettings enableCommunityFeatureIcon)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(checkbox wrapper)}#{c(checkbox row)} {
  background-color: transparent;
  &#{c(checkbox checked)} {
    background-color: transparent;
  }
}

// DISCOVERY
#{c(other cv guildSettingsDiscoveryChecklist)} {
  background-color: hsla(0, 0%, 0%, 0.4);
  #{c(other cv guildSettingsDiscoveryHeader)} {
    background-color: hsla(0, 0%, 0%, 0.4);
  }
  #{c(other cv guildSettingsDiscoverySeparator)} {
    background-color: hsla(0, 0%, 100%, 0.06);
  }
}

// WELCOME SCREEN
#{c(other cv guildSettingsWelcomeEnable)},
#{c(other cv guildSettingsWelcomePreview)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv guildSettingsWelcomeEditCircle)} {
  background-color: cv('colors.main');
  color: white;
}
#{c(other cv guildSettingsWelcomeChannel)} {
  background-color: hsla(0, 0%, 100%, 0.05);
}
#{c(other cv guildSettingsWelcomeChannelIcon)} {
  background-color: transparent;
}

// SERVER SUBSCRIPTIONS
#{c(other cv guildSettingsSubsCard)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv guildSettingsSubsStepsContainer)},
#{c(other cv guildSettingsSubsStepsImageContainer)} {
  background-color: transparent;
}
#{c(other cv guildSettingsSubsEarningsPreviewContainer)},
#{c(other cv guildSettingsSubsAvatarCard)} {
  background-color: hsla(0, 0%, 100%, 0.07) !important;
}
#{c(other cv guildSettingsSubsEmojisContainer)} {
  background-color: transparent;
}
#{c(other cv guildSettingsSubsViewServerButton)} {
  background-color: cv('colors.main');
}

// SERVER BOOST STATUS
#{c(main dark)} {
  #{c(other cv guildSettingsBoostBackground)} {
    color: hsla(0, 0%, 0%, 0.4);
  }
  #{c(other cv guildSettingsBoostTierInProgress)} {
    background-color: hsla(0, 0%, 0%, 0.4);
    border: 3px solid #f47fff;
  }
  #{c(other cv guildSettingsBoostTierLocked)},
  #{c(other cv guildSettingsBoostTierUnlocked)},
  #{c(other cv guildSettingsBoostTierBody)} {
    background-color: hsla(0, 0%, 0%, 0.4);
  }
}

// INVITES PAGE
// #{c(other cv serverInvitesCancel)} {
//   background-color: rgba(0, 0, 0, 0.4);
//   &:hover {
//     background-color: rgba(0, 0, 0, 0.8);
//   }
// }

// MEMBERS MANAGEMENT
#{c(other cv guildSettingsMembersMoved)} {
  background-color: rgba(0, 0, 0, 0.6);
}
#{c(other cv guildSettingsShowMembersInChannelList)} {
  background: rgba(0, 0, 0, 0.4);
}
