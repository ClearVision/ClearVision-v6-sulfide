@use "../../classes/_classes" as *;
@use "../../backend/functions" as *;
@use "../../backend/mixins" as *;
@use "../../backend/variables" as *;

/* COMMUNITY SERVER ONBOARDING */

// POPOUT
#{c(other cv onboardingEduPopout)} {
  background-color: cv('bg.general.popout');
}
#{c(other cv onboardingEduPopoutArrow)} {
  border-bottom-color: rgba(0, 0, 0, 0.8);
}

// PROGRESS
#{c(other cv onboardingProgressBarContainer)} {
  #{c(other cv onboardingProgressBar)} {
    background-color: hsla(0, 0%, 100%, 0.3);
    // + #{c(text text xs medium)} {
    //   color: hsla(0, 0%, 100%, 0.3) !important;
    // }
  }
  #{c(other cv onboardingProgressBarCurrent)} {
    background-color: cv('colors.main');
    // + #{c(text text xs medium)} {
    //   color: cv('colors.main') !important;
    // }
  }
  &:hover {
    #{c(other cv onboardingProgressBar)} {
      background-color: cv('colors.hover');
    }
  }
}

// LINKS
// #{c(main anchorLink)} {
//   #{c(other cv textSmallMedium)} {
//     color: #fff !important;
//   }
// }

// FOOTER
#{c(other cv onboardingFooterContainer)} {
  background-color: rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.4)) !important;
  box-shadow: none;
}

// DEFAULT CHANNELS
#{c(other cv onboardingChannelRow)} {
  background-color: rgba(0, 0, 0, 0.4);
  &:hover:not(#{c(other cv onboardingChannelRowDisabled)}) {
    background-color: hsla(0, 0%, 100%, 0.05);
  }
}
#{c(other cv onboardingChannelRowSeparator)} {
  margin: -1px 0 0;
  background-color: hsla(0, 0%, 100%, 0.05);
}
#{c(other cv onboardingChannelListHeader)},
#{c(other cv onboardingChannelList)} {
  background-color: rgba(0, 0, 0, 0.4);
}
#{c(other cv onboardingChannelListHeaderContainer)} {
  background-color: transparent;
}
// #{c(other cv onboardingChannelListHeader)} {
//   #{c(other cv textExtraSmallBold)} {
//     color: cv('colors.main') !important ;
//   }
// }
#{c(other cv onboardingChannelListProgressBar)} {
  background-color: cv('colors.main') !important;
}
#{c(other cv onboardingChannelListProgressIcon)} {
  path {
    &[fill='var(--background-accent)'] {
      fill: var(--danger-color);
    }
    &[fill='var(--brand-500)'] {
      fill: var(--success-color);
    }
  }
}
#{c(other cv onboardingChannelChattableIndicator)} {
  background-color: cv('colors.main');
}

// CUSTOMISATION QUESTIONS
#{c(other cv onboardingChannelCoverage)} {
  background-color: rgba(0, 0, 0, 0.4);
}
#{c(other cv onboardingChannelCoverageProgress)} {
  background-color: cv('colors.main') !important;
}
#{c(other cv onboardingChannelCoverageDetails)} {
  background-color: transparent;
}
#{c(other cv onboardingChannelCoveragePill)} {
  border-radius: 20px;
  background-color: rgba(0, 0, 0, 0.4);
  border: 2px solid cv('colors.main');
}
#{c(other cv onboardingAddQuestion)} {
  border-color: hsla(0, 0%, 100%, 0.3);
  #{c(other cv onboardingAddQuestionIcon)} {
    color: cv('colors.main');
  }
  // #{c(other cv textMediumMedium)} {
  //   color: cv('colors.main') !important;
  // }
  &:hover {
    border-color: cv('colors.hover');
    #{c(other cv onboardingAddQuestionIcon)} {
      color: cv('colors.hover');
    }
    // #{c(other cv textMediumMedium)} {
    //   color: cv('colors.hover') !important;
    // }
  }
}
#{c(other cv onboardingQuestionContainer)} {
  background-color: rgba(0, 0, 0, 0.4);
  border: 2px solid cv('colors.main');
}
#{c(other cv onboardingQuestionExample)} {
  background-color: rgba(0, 0, 0, 0.4);
  border-radius: 20px;
  border: 2px solid cv('colors.main');
}
#{c(other cv automodDropdown)} {
  background-color: cv('bg.general.popout');
  border: 1px solid hsla(0, 0%, 100%, 0.07);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}

// SERVER GUIDE
#{c(other cv onboardingActionExampleBadIcon)} {
  background-color: cv('colors.main');
  color: #fff;
}
#{c(other cv onboardingActionItem)},
#{c(other cv onboardingResourceChannel)} {
  background-color: hsla(0, 0%, 0%, 0.4);
}
#{c(other cv onboardingActionItemIcon)} {
  background-color: cv('colors.main');
  color: #fff;
}
#{c(other cv onboardingActionAdd)} {
  border-color: hsla(0, 0%, 100%, 0.3);
  color: cv('colors.main');
  // #{c(other cv textMediumNormal)} {
  //   color: cv('colors.main');
  // }
  &:hover {
    background-color: transparent;
    border-color: cv('colors.hover');
    color: cv('colors.hover');
    // #{c(other cv textMediumNormal)} {
    //   color: cv('colors.hover');
    // }
  }
}
#{c(other cv onboardingActionPreviewPill)} {
  background-color: rgba(0, 0, 0, 0.4);
  // #{c(other cv textSmallMedium)} {
  //   color: #fff;
  // }
}
#{c(other cv onboardingActionPreviewPillSelected)} {
  background-color: cv('colors.main');
}

// REVIEW
#{c(other cv onboardingReviewHeader)},
#{c(other cv onboardingReviewStepContainer)} {
  background-color: rgba(0, 0, 0, 0.4);
}
#{c(other cv onboardingReviewIconContainer)} {
  background-color: cv('colors.main');
}
#{c(other cv onboardingReviewIcon)} {
  color: #fff;
}

#{c(other cv onboardingRecommendedDefaultChannels)} {
  background-color: rgba(0, 0, 0, 0.4);
}

#{c(other cv onboardingChannelPermissionsMenu)} {
  background-color: rgba(0, 0, 0, 0.4);
}

#{c(other cv onboardingChannelPermissionsItems)}:hover {
  background-color: cv('colors.hover');
}

#{c(other cv onboardingRecommendedReadOnly)} {
  background-color: rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.4));
}

#{c(other cv onboardingPickAnEmoji)} {
  background-color: transparent;
  border: none;
  &:hover {
    background-color: cv('colors.hover');
  }
}

#{c(other cv automodDropdownRowLabel)} {
  background-color: rgba(0, 0, 0, 0.4);
  &:hover {
    background-color: hsla(0, 0%, 100%, 0.05);
  }
}
