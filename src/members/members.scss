@use "backend" as *;

/* MEMBERS */
#{c(memberList container)} {
  background-color: transparent;
}
#{c(memberList wrap)} {
  min-width: auto;
  min-height: 100%;
  flex-basis: cv('members-width');
}
#{c(memberList members)} {
  width: cv('members-width');
  background: rgba(0, 0, 0, calc(#{cv('bg.app.shading')} * 0.6));
}
#{c(other cv membersNotices)} {
  width: cv('members-width');
}

#{c(memberList members)} {
  // GROUP
  #{c(memberList group)} {
    padding-top: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: cv('colors.main');
    font-size: 11px;
    font-weight: 700;
    text-align: center;
    transition: all 0.15s ease-in-out;
    opacity: 0.7;
    &:hover {
      opacity: 1;
    }
    &:before {
      content: '';
      height: 2px;
      flex-grow: 1;
      background: linear-gradient(to left, currentColor 50%, transparent);
      margin-right: 5px;
    }
    &:after {
      content: '';
      height: 2px;
      flex-grow: 1;
      background: linear-gradient(to right, currentColor 50%, transparent);
      margin-left: 5px;
    }
  }

  // MEMBER
  #{c(memberList memberBackground)} {
    max-width: calc(var(--members-width) - 16px);
    background: transparent;
    backface-visibility: hidden;
    &#{c(memberList offline)} {
      #{c(memberList avatar)} {
        filter: grayscale(100%) blur(1px);
        transition: all 0.5s ease-in-out;
      }
      &:hover {
        #{c(memberList avatar)} {
          filter: none;
        }
      }
    }
    #{c(other cv memberLayout)} {
      position: relative;
      background: transparent;
      transition: all 0.15s ease-in-out, transform 0.1s ease-in-out;
      z-index: 1;
      &:active {
        transform: scale(0.9);
      }
    }
    #{c(other cv memberUsername)} > span {
      max-width: 100%;
      overflow: visible;
      transition: all 0.15s ease-in-out;
      &:before {
        content: '';
        position: absolute;
        @include stretch;
        background: linear-gradient(to right, hsla(0, 0%, 100%, 0.07) 90%, transparent);
        border-radius: 3px;
        opacity: 0;
        transition: all 0.15s ease-in-out;
        z-index: -1;
        pointer-events: none;
      }
      &:after {
        content: '';
        position: absolute;
        @include pos(0, 100%, 0, 0);
        background: linear-gradient(to right, cv('colors.main') 90%, transparent);
        border-radius: 3px;
        opacity: 0.8;
        transition: all 0.3s ease-in-out;
        z-index: -1;
        pointer-events: none;
      }
      &[style^='color:'] {
        &:before,
        &:after {
          background: linear-gradient(to right, currentColor 90%, transparent);
        }
      }
    }
    &:hover,
    &#{c(memberList selected)} {
      #{c(other cv memberUsername)} > span {
        &:before {
          opacity: 1;
        }
        &[style^='color:']:before {
          opacity: 0.07;
        }
      }
    }
    &#{c(memberList selected)} {
      #{c(other cv memberUsername)} > span {
        color: #fff;
        text-shadow: 0 0 3px rgba(0, 0, 0, 0.7);
        &:after {
          right: 0;
        }
      }
    }
    #{c(memberList name)} {
      font-size: 14px;
      color: hsla(0, 0%, 100%, 0.6);
      transition: all 0.15s ease-in-out;
      overflow: hidden;
    }
    #{c(other cv memberActivityText)} {
      color: hsla(0, 0%, 100%, 0.4);
      transition: all 0.15s ease-in-out;
    }
    #{c(other cv memberActivityText)} {
      strong {
        color: cv('colors.main');
        font-weight: 700;
        transition: all 0.15s ease-in-out;
      }
    }
    &#{c(memberList selected)} {
      #{c(memberList name)} {
        color: #fff;
      }
      #{c(other cv memberActivityText)} {
        text-shadow: 0 0 3px rgba(0, 0, 0, 0.7);
        color: hsla(0, 0%, 100%, 0.7);
      }
      #{c(other cv memberActivityText)} {
        strong {
          color: #fff;
        }
      }
      #{c(memberList ownerIcon)} {
        filter: drop-shadow(0 0 3px rgba(0, 0, 0, 0.7));
        opacity: 0.7;
      }
      #{c(other cv privateChannelActivityIcon)},
      #{c(other cv memberActivityEmoji)} {
        filter: drop-shadow(0 0 3px rgba(0, 0, 0, 0.7));
      }
    }
  }

  // PLACEHOLDERS
  #{c(memberList placeholderMemberGroups)} {
    margin: 0 25%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-basis: 50%;
    color: hsla(0, 0%, 100%, 0.3);
    &:before,
    &:after {
      content: '';
      height: 2px;
      flex-grow: 1;
    }
    &:before {
      background: linear-gradient(to left, currentColor 50%, transparent);
      margin-right: calc(50% + 5px);
      margin-left: -50%;
    }
    &:after {
      background: linear-gradient(to right, currentColor 50%, transparent);
      margin-right: -50%;
      margin-left: calc(50% + 5px);
    }
  }
  #{c(memberList placeholderMemberGroups)},
  #{c(memberList placeholderAvatar)},
  #{c(other cv memberPlaceholderUsername)},
  #{c(memberList placeholderUsernameMultiple)} {
    background: hsla(0, 0%, 100%, 0.3);
  }
}
#{c(other cv addMembersIcon)} {
  background-color: var(--background-overlay);
}

// THREAD EMPTY MEMBERS
#{c(other cv threadMembersEmptyHeader)} {
  padding-top: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: cv('colors.main') !important;
  font-size: 11px;
  font-weight: 700;
  text-align: center;
  transition: all 0.15s ease-in-out;
  opacity: 1;
  &:before {
    content: '';
    height: 2px;
    flex-grow: 1;
    background: linear-gradient(to left, currentColor 50%, transparent);
    margin-right: 5px;
  }
  &:after {
    content: '';
    height: 2px;
    flex-grow: 1;
    background: linear-gradient(to right, currentColor 50%, transparent);
    margin-left: 5px;
  }
}
#{c(other cv threadMembersEmptyIcon)} {
  background-color: cv('colors.main');
  color: #fff;
}

// MEMBERS ACTIVITY SECTION (as opposed to just the text under members)
#{c(other cv memberActivityContainer)} {
  background: rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.4));
  border: 2px solid transparent;
  &:hover {
    background: rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.4));
    border: 2px solid cv('colors.hover');
  }
}

// MEMBERS ACTIVITY POPOUT
/*clicked in*/
#{c(other cv memberActivityContentWrapper)},
#{c(other cv memberActivityInteractionsContainer)} {
  background-color: cv('bg.general.popout');
}
/*clicked in icon*/
#{c(other cv memberActivityShareToChannelButton)} {
  border-right: 1px solid hsla(0, 0%, 100%, 0.1);
  path {
    fill: #fff;
  }
}