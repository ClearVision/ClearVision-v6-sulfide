@use "../../classes/_classes" as *;
@use "../../backend/functions" as *;
@use "../../backend/mixins" as *;
@use "../../backend/variables" as *;

/* MENU POPOUT */
#{c(modals menus menu)} {
  background-color: cv('bg.general.popout');
  animation: cv-menu-fold-y 0.2s cubic-bezier(0.2, 0.6, 0.5, 1.1);
  transform-origin: 50% 0;
  #{c(modals menus item)} {
    color: hsla(0, 0%, 100%, 0.7);
    transition: all 0.15s ease-in-out;
    &#{c(modals menus itemFocused)} {
      background-color: cv('colors.hover');
      color: #fff;
      #{c(modals menus checkbox)},
      #{c(modals menus radioSelection)} {
        color: #fff;
      }
      #{c(modals menus checkboxCheck)} {
        fill: cv('colors.main');
      }
    }
    &#{c(modals menus colorDefault)}:active:not(#{c(modals menus itemHideInteraction)}) {
      background-color: cv('colors.hover');
      color: #fff;
      border-color: cv('colors.hover');
    }
    #{c(modals menus checkbox)},
    #{c(modals menus radioSelection)} {
      color: cv('colors.main');
    }
  }
  #{c(modals menus colorBrand)} {
    color: cv('colors.main');
  }
  #{c(modals menus colorDanger)} {
    color: var(--danger-color);
    &#{c(modals menus itemFocused)} {
      background-color: var(--danger-color);
      color: #fff;
      #{c(modals menus icon)} {
        transform: rotateY(180deg);
        transition: all 0.15s ease-in-out;
      }
    }
  }
}

// QUICK REACTIONS
#{c(modals menus quickReactionButton)} {
  background-color: transparent;
  &#{c(other cv quickReactButtonFocused)},
  &:hover {
    background-color: transparent;
  }
  &#{c(other cv quickReactButtonFocused)} {
    box-shadow: 0 0 2px 2px cv('colors.hover');
  }
}
#{c(other cv quickReactPremiumUpsell)} {
  background-color: transparent;
}

// CHANNEL THREAD MENU
#{c(modals openThreadsPopout popout)} {
  background-color: hsla(0, 0%, 0%, 0.8);
  #{c(other cv channelThreadPopoutRow)}:hover {
    background-color: cv('colors.hover');
  }
  #{c(other cv channelThreadPopoutMore)} {
    color: cv('colors.main');
  }
}

// STATUS PICKER
#{c(modals menus item)} {
  &#account-status-picker--online {
    &:not(#{c(modals menus itemFocused)}) {
      #{c(modals menus status)} {
        background-color: var(--online-color);
      }
    }
    &#{c(modals menus itemFocused)} {
      background-color: var(--online-color);
    }
  }
  &#account-status-picker--idle {
    &:not(#{c(modals menus itemFocused)}) {
      #{c(modals menus status)} {
        background-color: var(--idle-color);
      }
    }
    &#{c(modals menus itemFocused)} {
      background-color: var(--idle-color);
    }
  }
  &#account-status-picker--dnd {
    &:not(#{c(modals menus itemFocused)}) {
      #{c(modals menus status)} {
        background-color: var(--dnd-color);
      }
    }
    &#{c(modals menus itemFocused)} {
      background-color: var(--dnd-color);
    }
  }
  &#account-status-picker--invisible {
    &:not(#{c(modals menus itemFocused)}) {
      #{c(modals menus status)} {
        background-color: var(--offline-color);
      }
    }
    &#{c(modals menus itemFocused)} {
      background-color: var(--offline-color);
    }
  }
  // #{c(other cv userPopoutBodyInnerWrapper)} {
  //   background-color: transparent;
  // }
}

// ACCOUNT SWITCHER
#{c(profile status accountSwitcher activeIcon)} {
  path {
    fill: cv('colors.main');
  }
  #{c(modals menus itemFocused)} & circle {
    fill: cv('colors.main');
  }
}
