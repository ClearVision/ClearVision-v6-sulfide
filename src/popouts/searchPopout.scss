@use "backend" as *;

/* SEARCH POPOUT */
#{c(main dark)} #{c(modals search dropdown)} {
  background-color: cv('bg.general.popout');
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  animation: cv-menu-fold-y 0.2s cubic-bezier(0.2, 0.6, 0.5, 1.1) 0.1s backwards;
  transform-origin: 50% 0;
}
#{c(modals search dropdown)} {
  // SEARCH RESULTS GROUP
  > #{c(modals search resultsGroup)} {
    &:after {
      border-top: 1px solid transparent;
    }
    + #{c(modals search resultsGroup)} {
      &:after {
        border-top-color: hsla(0, 0%, 100%, 0.04);
      }
    }
    > #{c(other cv searchPopoutHeader)} {
      color: cv('colors.main');
      font-weight: 700;
    }
    > #{c(modals search learnMore)},
    > #{c(other cv searchPopoutClearHistory)} {
      opacity: 0.5;
      transition: all 0.15s ease-in-out;
      &:hover {
        opacity: 1;
      }
      > a {
        color: #fff;
      }
    }
  }

  // SEARCH OPTION
  #{c(modals search option)} {
    transition: all 0.15s ease-in-out;
    &:after {
      display: none;
    }
    #{c(header searchIconAdd)} {
      display: block;
      color: #fff;
      opacity: 0;
      transition: all 0.15s ease-in-out;
    }
    &:hover {
      #{c(header searchIconAdd)} {
        opacity: 0.7;
      }
    }
    #{c(other cv searchPopoutFilter)} {
      color: hsla(0, 0%, 100%, 0.3);
      transition: all 0.15s ease-in-out;
    }
    #{c(other cv searchPopoutAnswer)} {
      color: hsla(0, 0%, 100%, 0.5);
      font-weight: 500;
      transition: all 0.15s ease-in-out;
    }
    #{c(other cv searchPopoutNonText)} {
      color: hsla(0, 0%, 100%, 0.5);
      transition: all 0.15s ease-in-out;
    }
    > strong {
      color: hsla(0, 0%, 100%, 0.7);
      transition: all 0.15s ease-in-out;
    }

    // SELECTED
    &[aria-selected='true'] {
      background-color: hsla(0, 0%, 100%, 0.1);
      #{c(header searchIconAdd)} {
        opacity: 0.3;
        &:hover {
          opacity: 0.7;
        }
      }
      #{c(other cv searchPopoutFilter)} {
        color: hsla(0, 0%, 100%, 0.5);
      }
      #{c(other cv searchPopoutAnswer)},
      #{c(other cv searchPopoutNonText)} {
        color: hsla(0, 0%, 100%, 0.7);
      }
      > strong {
        color: #fff;
      }
    }

    // OPTION USER
    &#{c(other cv searchPopoutOptionUser)} {
      #{c(other cv searchPopoutDisplayedNick)} {
        color: hsla(0, 0%, 100%, 0.5);
        transition: all 0.15s ease-in-out;
      }
      #{c(other cv searchPopoutDisplayUsername)} {
        color: hsla(0, 0%, 100%, 0.3);
        transition: all 0.15s ease-in-out;
      }
      // &#{c(other cv searchPopoutOptionSelected)} {
      //   #{c(other cv searchPopoutDisplayedNick)} {
      //     color: hsla(0, 0%, 100%, 0.7);
      //   }
      //   #{c(other cv searchPopoutDisplayUsername)} {
      //     color: hsla(0, 0%, 100%, 0.5);
      //   }
      // }
    }

    // OPTION CHANNEL
    > #{c(other cv searchPopoutChannel)} {
      > strong {
        color: hsla(0, 0%, 100%, 0.7);
        transition: all 0.15s ease-in-out;
      }
      > #{c(other cv searchPopoutChannelIcon)},
      > #{c(other cv searchPopoutChannelCategory)} {
        color: hsla(0, 0%, 100%, 0.3);
        transition: all 0.15s ease-in-out;
      }
    }
    // &#{c(other cv searchPopoutOptionSelected)} {
    //   > #{c(other cv searchPopoutChannel)} {
    //     > strong {
    //       color: #fff;
    //     }
    //     > #{c(other cv searchPopoutChannelIcon)},
    //     > #{c(other cv searchPopoutChannelCategory)} {
    //       color: hsla(0, 0%, 100%, 0.5);
    //     }
    //   }
    // }
  }

  // QUERY CONTAINER
  #{c(modals search queryHeader)} {
    background-color: cv('colors.main');
    > #{c(other cv searchPopoutQueryText)} {
      color: hsla(0, 0%, 100%, 0.7);
      > strong {
        color: #fff;
      }
    }
  }

  // SEARCH DATEPICKER
  #{c(modals calendar datePicker)} {
    #{c(modals calendar datePickerHint)} {
      border-top: 1px solid hsla(0, 0%, 100%, 0.04);
      #{c(other cv searchPopoutHint)} {
        color: hsla(0, 0%, 100%, 0.7);
      }
      #{c(modals calendar dateHintValue)} {
        background-color: cv('colors.main');
        color: #fff;
        transition: all 0.15s ease-in-out;
        &:hover {
          background-color: cv('colors.hover');
        }
      }
    }
  }
}

// DATEPICKER
#{c(main dark)} #{c(modals calendar picker)} {
  #{c(modals calendar react datePicker)},
  #{c(modals calendar react header)} {
    background-color: rgba(0, 0, 0, calc(cv('bg.app.shading') * 0.8));
  }
  > #{c(modals calendar react datePicker)} {
    #{c(modals calendar react navigation)} {
      background-color: hsla(0, 0%, 100%, 0.1);
      border: 1px solid transparent;
      opacity: 0.7;
      transition: all 0.15s ease-in-out;
      &:hover {
        background-color: cv('colors.main');
        opacity: 1;
      }
    }
  }
  #{c(modals calendar react currnetMonth)} {
    border-bottom: 1px solid hsla(0, 0%, 100%, 0.04);
    color: cv('colors.main');
    font-weight: 600;
  }
  #{c(modals calendar react day-name)} {
    color: hsla(0, 0%, 100%, 0.7);
  }
  #{c(modals calendar react week)} {
    &:last-of-type {
      > #{c(modals calendar react day)} {
        border-bottom: 1px solid hsla(0, 0%, 100%, 0.04);
      }
    }
    > #{c(modals calendar react day)} {
      background-color: hsla(0, 0%, 100%, 0.1);
      border-left: 1px solid hsla(0, 0%, 100%, 0.04);
      border-top: 1px solid hsla(0, 0%, 100%, 0.04);
      color: hsla(0, 0%, 100%, 0.7);
      transition: all 0.15s ease-in-out;
      &:last-of-type {
        border-right: 1px solid hsla(0, 0%, 100%, 0.04);
      }
      &:hover {
        background-color: cv('colors.main');
        color: #fff;
      }
    }
    > #{c(modals calendar react daySelected)} {
      box-shadow: inset 0 -3px cv('colors.main');
      &:after {
        display: none;
      }
    }
    > #{c(other cv datepickerDayToday)} {
      color: cv('colors.main');
      font-weight: 700;
    }
    > #{c(modals calendar react dayDisabled)},
    > #{c(modals calendar react dayOutsideMonth)} {
      background-color: transparent;
      color: hsla(0, 0%, 100%, 0.1);
      &:hover {
        background-color: transparent;
        color: hsla(0, 0%, 100%, 0.1);
      }
    }
  }
}
